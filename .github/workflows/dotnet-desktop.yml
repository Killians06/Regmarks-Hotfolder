name: .NET Core Desktop

on:
  push:
    tags:
      - 'v*.*.*'  # DÃ©clenche le workflow sur les tags de version

jobs:
  build:
    runs-on: windows-latest
    env:
      DOTNET_INSTALL_DIR: '.\.dotnet'

    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Update .csproj version
        run: |
          sed -i "s/VERSION/${{ env.VERSION }}/g" Hotfolder.csproj

      - name: Update Inno Setup script version
        run: |
          sed -i 's|#define MyAppVersion ".*"|#define MyAppVersion "${{ env.VERSION }}"|' src/InnoSetupScript.iss

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Publish
        run: dotnet publish --output Regmarks-Hotfolder/PUBLISH

      - name: Upload Published Files
        uses: actions/upload-artifact@v3
        with:
          name: published-files
          path: Regmarks-Hotfolder/PUBLISH

  Inno-Setup:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Published Files
        uses: actions/download-artifact@v3
        with:
          name: published-files
          path: InnoSetup/PublishedFiles
      - name: Debug Downloaded Files
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files in InnoSetup/PublishedFiles directory:"
          dir InnoSetup/PublishedFiles
      - name: Inno Setup Action
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: src/InnoSetupScript.iss
          options: /O+
      - name: Debug Inno Setup Output
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files in current directory:"
          dir
          echo "Listing files in InnoSetup directory:"
          dir InnoSetup
      - name: Save Inno Setup Output
        run: |
          mkdir -p release
          cp "InnoSetup/RegMarks Hotfolder Installer.exe" release/
      - name: Verify Inno Setup Output
        run: |
          if (!(Test-Path -Path "release/RegMarks Hotfolder Installer.exe")) {
            Write-Error "File not found!"
            exit 1
          }
        shell: pwsh
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: RegMarks-Hotfolder-Installer
          path: release/RegMarks Hotfolder Installer.exe

  release:
    needs: Inno-Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: RegMarks-Hotfolder-Installer
          path: ./release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/RegMarks Hotfolder Installer.exe
          asset_name: RegMarks Hotfolder Installer.exe
          asset_content_type: application/octet-stream